

 Can use the fetch API to make HTTP requests Can use ES6 and use babel-node to transpile the code Can describe the general programming term Minimum Viable Product or MVP Can determine which HTTP application feature requirements are required to build an MVP of said feature Can build a RESTful API using Express Can describe the general programming term SOLID Can describe the general programming term DRY
General
Code uses a linter and there are no linting errors.
Repository includes a README file with basic installation and setup.
All dependencies are properly declared in package.json.
All major features are added via pull requests with a clear description and concise commit messages.
Every pull request has been reviewed by at least one other person.
The artifact produced is properly licensed, preferably with the MIT license.
Functionality
Users can create to do list items.
Users can delete unwanted to do list items.
Users can check items off as completed.
Users can edit the text on existing to do list items.
UI renders to do items differently when they are completed (using a checkbox or some other indicator).
When an error occurs, the user is notified with modal message.*
Backend uses Node.js and Express.
App persists to do list items in a database.
Testing
There are thorough tests for all functionality involved in interacting with the database.
There are tests for creating to do list items.
There are tests for deleting to do list items.
There are tests for completing to do list items.
There are tests for editing to do list items.
All tests are passing.
* A quick and easy way to do this is to use the alert() function.
Stretch
App is deployed on Heroku.
Users can rearrange to do list items.
Users can create multiple to-do lists.
Users have their own account and can sign up and log in/out.
App is written with ES6 and compiled using babel.
